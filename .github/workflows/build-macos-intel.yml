name: Build macOS (Intel - AppKit)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # Use macos-13 runner as it is Intel-based and has more RAM and CPU cores.
    runs-on: macos-13

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Homebrew dependencies
        run: |
          brew update
          brew install autoconf autoconf-archive automake ccache cmake nasm ninja pkg-config llvm@19

      - name: Build Ladybird using Meta/ladybird.sh (force Intel build, AppKit chrome)
        env:
          # Use clang from Homebrew's llvm@19 so that a C++23â€“capable compiler is used.
          CC: "$(brew --prefix llvm@19)/bin/clang"
          CXX: "$(brew --prefix llvm@19)/bin/clang++"
          # Force the build to target Intel (x86_64) even on Apple Silicon hosts.
          CMAKE_OSX_ARCHITECTURES: x86_64
        run: |
          chmod +x Meta/ladybird.sh
          # Pass -DENABLE_QT=OFF to ensure that the AppKit chrome (the default native chrome on macOS) is used.
          ./Meta/ladybird.sh build -DENABLE_QT=OFF

      - name: Verify build output architecture
        run: |
          BINARY="Build/release/bin/Ladybird"
          if [ -f "$BINARY" ]; then
            echo "Build successful: Found Ladybird binary."
            echo "Checking binary architecture:"
            lipo -info "$BINARY"
          else
            echo "Ladybird binary not found!" >&2
            exit 1
          fi

      - name: Upload Ladybird.app artifact
        uses: actions/upload-artifact@v4
        with:
          name: Ladybird.app
          # The built app bundle is expected in Build/release/bin.
          path: Build/release/bin/Ladybird.app
